digraph dependencies {
  node [shape=box];
  "GraphWidget.h" -> "Analyzer.h";
  "GraphvizRunner.cpp" -> "GraphvizRunner.h";
  "Analyzer.cpp" -> "Analyzer.h";
  "DependencyAnalyzer.cpp" -> "DependencyAnalyzer.h";
  "MainWindow.h" -> "GraphInfo.h";
  "MainWindow.h" -> "GraphWidget.h";
  "Utils.cpp" -> "windows.h";
  "Utils.cpp" -> "Utils.h";
  "GraphOverlay.cpp" -> "GraphOverlay.h";
  "graphviz_runner.cpp" -> "graphviz_runner.hpp";
  "image_opener.cpp" -> "image_opener.hpp";
  "DotGenerator.cpp" -> "DotGenerator.h";
  "GraphOverlay.h" -> "GraphInfo.h";
  "GraphOverlay.h" -> "DependencyAnalyzer.h";
  "main.cpp" -> "GraphvizRunner.h";
  "main.cpp" -> "DotGenerator.h";
  "main.cpp" -> "DependencyAnalyzer.h";
  "main.cpp" -> "Analyzer.h";
  "main.cpp" -> "Utils.h";
  "main.cpp" -> "image_opener.hpp";
  "main.cpp" -> "graphviz_runner.hpp";
  "main.cpp" -> "dot_generator.hpp";
  "main.cpp" -> "dependency_scanner.hpp";
  "main.cpp" -> "windows.h";
  "main.cpp" -> "MainWindow.h";
  "GraphWidget.cpp" -> "cgraph.h";
  "GraphWidget.cpp" -> "gvc.h";
  "GraphWidget.cpp" -> "DependencyAnalyzer.h";
  "GraphWidget.cpp" -> "GraphWidget.h";
  "MainWindow.cpp" -> "DependencyAnalyzer.h";
  "MainWindow.cpp" -> "GraphOverlay.h";
  "MainWindow.cpp" -> "MainWindow.h";
  "dependency_scanner.cpp" -> "dependency_scanner.hpp";
  "GraphInfo.h" -> "DependencyAnalyzer.h";
  "dot_generator.hpp" -> "dependency_scanner.hpp";
  "dot_generator.cpp" -> "dot_generator.hpp";
  "dependency_scanner.cpp";
  "MainWindow.cpp";
  "gvc.h";
  "cgraph.h";
  "GraphWidget.cpp";
  "dependency_scanner.hpp";
  "main.cpp";
  "DotGenerator.h";
  "graphviz_runner.hpp";
  "graphviz_runner.cpp";
  "DotGenerator.cpp";
  "GraphOverlay.h";
  "GraphWidget.h";
  "GraphvizRunner.h";
  "Analyzer.h";
  "GraphvizRunner.cpp";
  "Analyzer.cpp";
  "image_opener.cpp";
  "DependencyAnalyzer.h";
  "image_opener.hpp";
  "DependencyAnalyzer.cpp";
  "MainWindow.h";
  "dot_generator.cpp";
  "dot_generator.hpp";
  "windows.h";
  "GraphInfo.h";
  "GraphOverlay.cpp";
  "Utils.cpp";
  "Utils.h";
}
